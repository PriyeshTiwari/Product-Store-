import { Button, Container, HStack, Flex, Text, useColorMode, useToast } from '@chakra-ui/react';
import { Link, useNavigate } from 'react-router-dom';
import { PlusSquareIcon } from "@chakra-ui/icons";
import { IoMoon } from "react-icons/io5";
import { LuSun } from "react-icons/lu";
import { FaShoppingCart } from "react-icons/fa";
import { useEffect } from 'react';

import useAuthStore from '../Store/useAuthStore';
import useCartStore from '../Store/useCartStore';

const Navbar = () => {
    const { colorMode, toggleColorMode } = useColorMode();
    const { user, logout } = useAuthStore();
    const { items, fetchCart, clearCart } = useCartStore();
    const toast = useToast();
    const navigate = useNavigate();

    // Jab user login ho, toh uska cart fetch karo
    useEffect(() => {
        if (user?.role === 'customer') {
            fetchCart();
        }
    }, [user, fetchCart]);

    const handleLogout = async () => {
        try {
            await fetch("/api/auth/logout", { method: "POST" });
            logout();
            clearCart();
            navigate("/login");
            toast({
                title: "Success",
                description: "Logged out successfully",
                status: "success",
                duration: 3000,
                isClosable: true,
            });
        } catch (error) {
            toast({
                title: "Error",
                description: error.message,
                status: "error",
                duration: 3000,
                isClosable: true,
            });
        }
    };

    return (
        <Container maxW={"1140px"} px={4} py={2} mb={4}>
            <Flex
                h={16}
                alignItems={'center'}
                justifyContent={'space-between'}
            >
                <Text
                    fontSize={{ base: "22", sm: "28" }}
                    fontWeight={"bold"}
                    bgGradient={"linear(to-r, cyan.400, blue.500)"}
                    bgClip={"text"}
                >
                    <Link to={"/"}>Product Store ðŸ›’</Link>
                </Text>

                <HStack spacing={3} alignItems={"center"}>
                    {user ? (
                        <>
                            {/* Agar user SELLER hai */}
                            {user?.role === 'seller' && (
                                <>
                                    <Link to="/seller-dashboard">
                                        <Button size={"sm"}>My Dashboard</Button>
                                    </Link>
                                    <Link to="/create">
                                        <Button size={"sm"}>
                                            <PlusSquareIcon fontSize={20} />
                                        </Button>
                                    </Link>
                                </>
                            )}

                            {/* Agar user CUSTOMER hai */}
                            {user?.role === 'customer' && (
                                <>
                                    {/* YEH NAYA LINK ADD KIYA HAI */}
                                    <Link to="/my-orders">
                                        <Button size={"sm"}>My Orders</Button>
                                    </Link>
                                    <Link to="/cart">
                                        <Button size={"sm"} position="relative">
                                            <FaShoppingCart />
                                            {items.length > 0 && (
                                                <Text
                                                    as="span"
                                                    position="absolute"
                                                    top="-8px"
                                                    right="-8px"
                                                    bg="red.500"
                                                    color="white"
                                                    borderRadius="full"
                                                    px={2}
                                                    fontSize="xs"
                                                >
                                                    {items.length}
                                                </Text>
                                            )}
                                        </Button>
                                    </Link>
                                </>
                            )}

                            <Button size={"sm"} onClick={handleLogout}>
                                Logout
                            </Button>
                        </>
                    ) : (
                        <>
                            <Link to="/login">
                                <Button size={"sm"}>Login</Button>
                            </Link>
                            <Link to="/signup">
                                <Button size={"sm"}>Sign Up</Button>
                            </Link>
                        </>
                    )}

                    <Button size={"sm"} onClick={toggleColorMode}>
                        {colorMode === 'light' ? <IoMoon /> : <LuSun size='20' />}
                    </Button>
                </HStack>
            </Flex>
        </Container>
    );
};

export default Navbar;






// import { Button, Container, HStack, Flex, Text, useColorMode, useToast } from '@chakra-ui/react';
// import { Link, useNavigate } from 'react-router-dom';
// import { PlusSquareIcon } from "@chakra-ui/icons";
// import { IoMoon } from "react-icons/io5";
// import { LuSun } from "react-icons/lu";
// import useAuthStore from '../Store/useAuthStore'; // 1. Store ko import karo

// const Navbar = () => {
// Â  Â  const { colorMode, toggleColorMode } = useColorMode();
// Â  Â  const { user, logout } = useAuthStore(); // 2. User ki state aur logout function nikalo
// Â  Â  const toast = useToast();
// Â  Â  const navigate = useNavigate();

// Â  Â  // 3. Logout ka logic handle karne ke liye function
// Â  Â  const handleLogout = async () => {
// Â  Â  Â  Â  try {
// Â  Â  Â  Â  Â  Â  // Backend se logout request bhejo (cookie clear karne ke liye)
// Â  Â  Â  Â  Â  Â  const res = await fetch("/api/auth/logout", {
// Â  Â  Â  Â  Â  Â  Â  Â  method: "POST",
// Â  Â  Â  Â  Â  Â  Â  Â  headers: { "Content-Type": "application/json" },
// Â  Â  Â  Â  Â  Â  });
// Â  Â  Â  Â  Â  Â  const data = await res.json();
// Â  Â  Â  Â  Â  Â  
// Â  Â  Â  Â  Â  Â  if(!res.ok) throw new Error(data.message);

// Â  Â  Â  Â  Â  Â  // Frontend se user state clear karo
// Â  Â  Â  Â  Â  Â  logout();
// Â  Â  Â  Â  Â  Â  navigate("/login"); // User ko login page par bhej do
// Â  Â  Â  Â  Â  Â  toast({
// Â  Â  Â  Â  Â  Â  Â  Â  title: "Success",
// Â  Â  Â  Â  Â  Â  Â  Â  description: "Logged out successfully",
// Â  Â  Â  Â  Â  Â  Â  Â  status: "success",
// Â  Â  Â  Â  Â  Â  Â  Â  duration: 3000,
// Â  Â  Â  Â  Â  Â  Â  Â  isClosable: true,
// Â  Â  Â  Â  Â  Â  });
// Â  Â  Â  Â  } catch (error) {
// Â  Â  Â  Â  Â  Â  toast({
// Â  Â  Â  Â  Â  Â  Â  Â  title: "Error",
// Â  Â  Â  Â  Â  Â  Â  Â  description: error.message,
// Â  Â  Â  Â  Â  Â  Â  Â  status: "error",
// Â  Â  Â  Â  Â  Â  Â  Â  duration: 3000,
// Â  Â  Â  Â  Â  Â  Â  Â  isClosable: true,
// Â  Â  Â  Â  Â  Â  });
// Â  Â  Â  Â  }
// Â  Â  };

// Â  Â  return (
// Â  Â  Â  Â  <Container maxW={"1140px"} px={4}>
// Â  Â  Â  Â  Â  Â  <Flex
// Â  Â  Â  Â  Â  Â  Â  Â  h={16}
// Â  Â  Â  Â  Â  Â  Â  Â  alignItems={'center'}
// Â  Â  Â  Â  Â  Â  Â  Â  justifyContent={'space-between'}
// Â  Â  Â  Â  Â  Â  Â  Â  flexDir={{ base: 'column', sm: 'row' }}
// Â  Â  Â  Â  Â  Â  >
// Â  Â  Â  Â  Â  Â  Â  Â  <Text
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fontSize={{ base: "22", sm: "28" }}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fontWeight={"bold"}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  textTransform={"uppercase"}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  textAlign={"center"}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bgGradient={"linear(to-r, cyan.400, blue.500)"}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bgClip={"text"}
// Â  Â  Â  Â  Â  Â  Â  Â  >
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to={"/"}>Product Store ðŸ›’</Link>
// Â  Â  Â  Â  Â  Â  Â  Â  </Text>

// Â  Â  Â  Â  Â  Â  Â  Â  <HStack spacing={2} alignItems={"center"}>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* 4. Conditional Rendering: Check karo agar user hai ya nahi */}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {user ? (
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/create">
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button size={"sm"}>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <PlusSquareIcon fontSize={20} />
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button size={"sm"} onClick={handleLogout}>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Logout
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ) : (
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/login">
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button size={"sm"}>Login</Button>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Link to="/signup">
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button size={"sm"}>Sign Up</Button>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Link>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}

// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button size={"sm"} onClick={toggleColorMode}>
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {colorMode === 'light' ? <IoMoon /> : <LuSun size='20' />}
// Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
// Â  Â  Â  Â  Â  Â  Â  Â  </HStack>
// Â  Â  Â  Â  Â  Â  </Flex>
// Â  Â  Â  Â  </Container>
// Â  Â  );
// };

// export default Navbar;